{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/search-params/dist/cjs/index.js","webpack:///./node_modules/router5/node_modules/symbol-observable/es/index.js","webpack:///./node_modules/router5/node_modules/symbol-observable/es/ponyfill.js","webpack:///./node_modules/path-parser/dist/es/path-parser.js","webpack:///./node_modules/route-node/dist/es/route-node.js","webpack:///./node_modules/router5/dist/es/constants.js","webpack:///./node_modules/router5/dist/es/core/utils.js","webpack:///./node_modules/router5/dist/es/core/router-lifecycle.js","webpack:///./node_modules/router5-transition-path/dist/es/transitionPath.js","webpack:///./node_modules/router5-transition-path/dist/es/index.js","webpack:///./node_modules/router5/dist/es/transition/resolve.js","webpack:///./node_modules/router5/dist/es/transition/index.js","webpack:///./node_modules/router5/dist/es/core/navigation.js","webpack:///./node_modules/router5/dist/es/core/observable.js","webpack:///./node_modules/router5/dist/es/core/plugins.js","webpack:///./node_modules/router5/dist/es/core/route-lifecycle.js","webpack:///./node_modules/router5/dist/es/core/clone.js","webpack:///./node_modules/router5/dist/es/create-router.js","webpack:///./node_modules/router5/dist/es/core/middleware.js","webpack:///./node_modules/router5/dist/es/plugins/logger/index.js","webpack:///./node_modules/router5/dist/es/index.js","webpack:///./node_modules/router5/plugins/browser/utils.js","webpack:///./node_modules/router5/plugins/browser/browser.js","webpack:///./node_modules/router5/constants.js","webpack:///./node_modules/router5/plugins/browser/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","makeOptions","opts","arrayFormat","booleanFormat","nullFormat","encodeValue","encodeURIComponent","decodeValue","decodeURIComponent","encode","encodeNull","toString","encodeBoolean","Array","isArray","arr","encodeName","index","getNameEncoder","map","val","join","encodeArray","getSearch","path","pos","indexOf","slice","parseName","bracketPosition","hasBrackets","parse","options","split","reduce","params","param","_a","rawName","_b","currentValue","decodedValue","undefined","decode","concat","build","keys","filter","paramName","Boolean","omit","paramsToOmit","querystring","removedParams","chunk","left","right","kept","removed","keep","paramsToKeep","keptParams","root","_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__","self","window","global","result","__webpack_exports__","symbolObservablePonyfill","Symbol","observable","path_parser_assign","assign","t","arguments","length","path_parser_defaultOrConstrained","match","replace","path_parser_rules","pattern","regex","RegExp","path_parser_tokenise","str","tokens","some","rule","push","type","otherVal","Function","substr","Error","path_parser_identity","_","path_parser_exists","path_parser_Path","Path","this","hasUrlParams","test","hasSpatParam","hasMatrixParams","hasQueryParams","spatParams","getParams","urlParams","queryParams","source","createPath","isQueryParam","_this","strictTrailingSlash","path_parser_optTrailingSlash","urlTest","cjs","forEach","partialTest","delimited","delimiter","path_parser_upToDelimiter","existingVal","path_parser_appendQueryParam","ignoreConstraints","ignoreSearch","encodedUrlParams","acc","key","encodeURI","missingParameters","every","base","searchParams","sparams","searchPart","predicate","caseSensitive","route_node_assign","route_node_getMetaFromSegments","segments","accName","meta","segment","parser","allParams","route_node_matchChildren","nodes","pathSegment","currentMatch","consumedBefore","queryParamsMode","_c","strongMatching","_d","isRoot","_loop_1","child","remainingPath","children","consumedPath","route_node_getPath","remainingQueryParams_1","getNonAbsoluteChildren","_i","nodes_1","state_1","route_node","trailingSlashMode","RouteNode","childRoutes","cb","parent","absolute","checkParents","add","getParentSegments","reverse","setParent","setPath","route","addRouteNode","routeNode","fullName","addNode","getPath","routeName","getSegmentsByName","buildPath","nonSearchParams","segments_1","apply","extraParams","searchParamsObject","segmentPath","finalPath","route_node_buildPathFromSegments","buildState","matchPath","getSegmentsMatchingPath","matchedSegments","firstSegmentParams","lastSegmentSlashChild","findSlashChild","route_node_buildStateFromMatch","names","originalChildren","sort","leftPath","rightPath","leftSegments","rightSegments","leftParamsCount","rightParamsCount","leftParamLength","rightParamLength","route_node_sortChildren","hasParentsParams","findAbsoluteChildren","absoluteChildren","routes","filteredRoutes","findSegmentByName","startingNodes","node","finalMatch","errorCodes","ROUTER_NOT_STARTED","NO_START_PATH_OR_STATE","ROUTER_ALREADY_STARTED","ROUTE_NOT_FOUND","SAME_STATES","CANNOT_DEACTIVATE","CANNOT_ACTIVATE","TRANSITION_ERR","TRANSITION_CANCELLED","es_constants","UNKNOWN_ROUTE","ROUTER_START","ROUTER_STOP","TRANSITION_START","TRANSITION_CANCEL","TRANSITION_SUCCESS","TRANSITION_ERROR","utils_extends","target","router_lifecycle_typeof","iterator","obj","constructor","router_lifecycle_noop","router_lifecycle_withRouterLifecycle","router","started","isStarted","start","_ref","getOptions","lastArg","done","startPathOrState","code","startPath","startState","invokeEventListeners","err","state","invokeErrCb","defaultRoute","setState","navigateToDefault","transitionToState","getState","redirect","navigate","reload","redirected","allowNotFound","makeNotFoundState","stop","transitionPath_typeof","nameToIDs","ids","hasMetaParams","extractSegmentParams","transitionPath","toState","fromState","fromStateIds","toStateIds","maxI","Math","min","_loop","v","leftParams","rightParams","_ret","pointOfDifference","toDeactivate","toActivate","intersection","es","resolve_extends","resolve_typeof","resolve","functions","callback","isCancelled","errorKey","remainingFunctions","isState","processFn","stepFn","errBase","_done","newState","console","error","mergeStates","res","then","resVal","stack","promiseError","next","isMapped","writable","transition_extends","transition_slicedToArray","_arr","_n","_e","_s","sliceIterator","TypeError","transition_defineProperty","es_transition","cancelled","completed","_router$getLifecycleF","getLifecycleFunctions","_router$getLifecycleF2","canDeactivateFunctions","canActivateFunctions","middlewareFunctions","getMiddlewareFunctions","makeError","isUnknownRoute","asyncBase","_transitionPath","canDeactivate","forceDeactivate","canDeactivateFunctionMap","fnMap","canActivate","canActivateFunctionMap","middleware","autoCleanUp","activeSegments","clearCanDeactivate","navigation_extends","navigation_typeof","navigation_noop","observable_typeof","observable_observerPlugin","listeners","_subscribe","listener","isObject","finalListener","bind","unsubscribeHandler","unsubscribe","subscribe","symbol_observable_es","observer","onTransitionSuccess","previousRoute","pluginName","pluginMethods","withPlugins","plugins","removePluginListeners","addPlugin","plugin","hasPlugin","appliedPlugin","executeFactory","removeEventListeners","methodName","addEventListener","toLowerCase","arr2","from","plugins_toConsumableArray","startPlugin","usePlugin","_len","_key","getPlugins","toFunction","clone_slicedToArray","clone_extends","clone_toConsumableArray","create_router_extends","create_router_defaultOptions","rewritePathOnMatch","create_router","create_router_createRouter","routerState","stateId","callbacks","dependencies","opt","setOption","config","decoders","encoders","defaultParams","rootNode","id","makeState","setDependency","dependencyName","dependency","setDependencies","deps","depName","getDependencies","onRouteAdded","canActivateHandler","factoryFunction","create_router_toConsumableArray","eventName","removeEventListener","args","_cb","areStatesEqual","state1","state2","ignoreQueryParams","getUrlParams","state1Params","state2Params","areStatesDescendants","parentState","childState","forwardState","routeParams","forwardMap","isActive","strictEquality","activeState","_router$getOptions","encodedParams","_forwardState","decodedParams","_forwardState2","builtPath","setRootPath","rootPath","utils_withUtils","middlewareFactories","addMiddleware","useMiddleware","middlewares","getMiddlewareFactories","clearMiddleware","withMiddleware","observable_withObservablePlugin","canDeactivateFactories","canActivateFactories","canDeactivateHandler","factory","getLifecycleFactories","withRouteLifecycle","cancelCurrentTransition","cancel","sameStates","force","_err","skipTransition","_err$redirect","forward","fromRoute","toRoute","navigation_withNavigation","createRouter","clone","clonedDependencies","clonedRouter","withCloning","forwardTo","decodeParams","encodeParams","forceId","setProp","finalStateId","option","logger_noop","loggerPlugin","startGroup","endGroup","groupCollapsed","label","groupEnd","group","info","onStop","onTransitionStart","log","onTransitionCancel","warn","onTransitionError","logger","default","urlToPath","url","pathParts","pathname","hash","search","useHash","hashPrefix","buildUrl","prefix","matchUrl","identity","arg","noop","browser","history","getBase","location","pushState","title","replaceState","addPopstateListener","fn","shouldAddHashChangeListener","navigator","userAgent","getLocation","getHash","_extends","_constants","_constants2","_interopRequireDefault","_browser2","_utils2","defaultOptions","mergeState","preserveHash","transitionOptions","removePopStateListener","browserPlugin","routerOptions","routerStart","updateBrowserState","trimmedState","finalState","onPopState","evt","replaceHistoryState","lastKnownState","onStart","historyState","hasState","statesAreEqual","originalModule","webpackPolyfill","create","g","eval","e","Router5","browser_1"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar makeOptions = function (opts) {\r\n    if (opts === void 0) { opts = {}; }\r\n    return ({\r\n        arrayFormat: opts.arrayFormat || 'none',\r\n        booleanFormat: opts.booleanFormat || 'none',\r\n        nullFormat: opts.nullFormat || 'default'\r\n    });\r\n};\r\nvar encodeValue = function (value) { return encodeURIComponent(value); };\r\nvar decodeValue = function (value) { return decodeURIComponent(value); };\r\nvar encodeBoolean = function (name, value, opts) {\r\n    if (opts.booleanFormat === 'empty-true' && value) {\r\n        return name;\r\n    }\r\n    var encodedValue;\r\n    if (opts.booleanFormat === 'unicode') {\r\n        encodedValue = value ? '✓' : '✗';\r\n    }\r\n    else {\r\n        encodedValue = value.toString();\r\n    }\r\n    return name + \"=\" + encodedValue;\r\n};\r\nvar encodeNull = function (name, opts) {\r\n    if (opts.nullFormat === 'hidden') {\r\n        return '';\r\n    }\r\n    if (opts.nullFormat === 'string') {\r\n        return name + \"=null\";\r\n    }\r\n    return name;\r\n};\r\nvar getNameEncoder = function (opts) {\r\n    if (opts.arrayFormat === 'index') {\r\n        return function (name, index) { return name + \"[\" + index + \"]\"; };\r\n    }\r\n    if (opts.arrayFormat === 'brackets') {\r\n        return function (name) { return name + \"[]\"; };\r\n    }\r\n    return function (name) { return name; };\r\n};\r\nvar encodeArray = function (name, arr, opts) {\r\n    var encodeName = getNameEncoder(opts);\r\n    return arr\r\n        .map(function (val, index) { return encodeName(name, index) + \"=\" + encodeValue(val); })\r\n        .join('&');\r\n};\r\nvar encode = function (name, value, opts) {\r\n    if (value === null) {\r\n        return encodeNull(name, opts);\r\n    }\r\n    if (typeof value === 'boolean') {\r\n        return encodeBoolean(name, value, opts);\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return encodeArray(name, value, opts);\r\n    }\r\n    return name + \"=\" + encodeValue(value);\r\n};\r\nvar decode = function (value, opts) {\r\n    if (value === undefined) {\r\n        return opts.booleanFormat === 'empty-true' ? true : null;\r\n    }\r\n    if (opts.booleanFormat === 'string') {\r\n        if (value === 'true') {\r\n            return true;\r\n        }\r\n        if (value === 'false') {\r\n            return false;\r\n        }\r\n    }\r\n    else if (opts.booleanFormat === 'unicode') {\r\n        if (decodeValue(value) === '✓') {\r\n            return true;\r\n        }\r\n        if (decodeValue(value) === '✗') {\r\n            return false;\r\n        }\r\n    }\r\n    else if (opts.nullFormat === 'string') {\r\n        if (value === 'null') {\r\n            return null;\r\n        }\r\n    }\r\n    return decodeValue(value);\r\n};\n\nvar getSearch = function (path) {\r\n    var pos = path.indexOf('?');\r\n    if (pos === -1) {\r\n        return path;\r\n    }\r\n    return path.slice(pos + 1);\r\n};\r\nvar isSerialisable = function (val) { return val !== undefined; };\r\nvar parseName = function (name) {\r\n    var bracketPosition = name.indexOf('[');\r\n    var hasBrackets = bracketPosition !== -1;\r\n    return {\r\n        hasBrackets: hasBrackets,\r\n        name: hasBrackets ? name.slice(0, bracketPosition) : name\r\n    };\r\n};\n\n/**\r\n * Parse a querystring and return an object of parameters\r\n */\r\nvar parse = function (path, opts) {\r\n    var options = makeOptions(opts);\r\n    return getSearch(path)\r\n        .split('&')\r\n        .reduce(function (params, param) {\r\n        var _a = param.split('='), rawName = _a[0], value = _a[1];\r\n        var _b = parseName(rawName), hasBrackets = _b.hasBrackets, name = _b.name;\r\n        var currentValue = params[name];\r\n        var decodedValue = decode(value, options);\r\n        if (currentValue === undefined) {\r\n            params[name] = hasBrackets ? [decodedValue] : decodedValue;\r\n        }\r\n        else {\r\n            params[name] = [].concat(currentValue, decodedValue);\r\n        }\r\n        return params;\r\n    }, {});\r\n};\r\n/**\r\n * Build a querystring from an object of parameters\r\n */\r\nvar build = function (params, opts) {\r\n    var options = makeOptions(opts);\r\n    return Object.keys(params)\r\n        .filter(function (paramName) { return isSerialisable(params[paramName]); })\r\n        .map(function (paramName) { return encode(paramName, params[paramName], options); })\r\n        .filter(Boolean)\r\n        .join('&');\r\n};\r\n/**\r\n * Remove a list of parameters from a querystring\r\n */\r\nvar omit = function (path, paramsToOmit, opts) {\r\n    var options = makeOptions(opts);\r\n    var searchPart = getSearch(path);\r\n    if (searchPart === '') {\r\n        return {\r\n            querystring: '',\r\n            removedParams: {}\r\n        };\r\n    }\r\n    var _a = path.split('&').reduce(function (_a, chunk) {\r\n        var left = _a[0], right = _a[1];\r\n        var rawName = chunk.split('=')[0];\r\n        var name = parseName(rawName).name;\r\n        return paramsToOmit.indexOf(name) === -1\r\n            ? [left.concat(chunk), right]\r\n            : [left, right.concat(chunk)];\r\n    }, [[], []]), kept = _a[0], removed = _a[1];\r\n    return {\r\n        querystring: kept.join('&'),\r\n        removedParams: parse(removed.join('&'), options)\r\n    };\r\n};\r\n/**\r\n * Remove a list of parameters from a querystring\r\n */\r\nvar keep = function (path, paramsToKeep, opts) {\r\n    var options = makeOptions(opts);\r\n    var searchPart = getSearch(path);\r\n    if (searchPart === '') {\r\n        return {\r\n            keptParams: {},\r\n            querystring: ''\r\n        };\r\n    }\r\n    var _a = path.split('&').reduce(function (_a, chunk) {\r\n        var left = _a[0], right = _a[1];\r\n        var rawName = chunk.split('=')[0];\r\n        var name = parseName(rawName).name;\r\n        return paramsToKeep.indexOf(name) >= 0\r\n            ? [left.concat(chunk), right]\r\n            : [left, right.concat(chunk)];\r\n    }, [[], []]), kept = _a[0], removed = _a[1];\r\n    return {\r\n        keptParams: parse(kept.join('&'), options),\r\n        querystring: kept.join('&')\r\n    };\r\n};\n\nexports.parse = parse;\nexports.build = build;\nexports.omit = omit;\nexports.keep = keep;\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import { build, parse } from 'search-params';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\nvar defaultOrConstrained = function (match) {\r\n    return '(' +\r\n        (match ? match.replace(/(^<|>$)/g, '') : \"[a-zA-Z0-9-_.~%':|=+]+\") +\r\n        ')';\r\n};\r\nvar rules = [\r\n    {\r\n        name: 'url-parameter',\r\n        pattern: /^:([a-zA-Z0-9-_]*[a-zA-Z0-9]{1})(<(.+?)>)?/,\r\n        regex: function (match) {\r\n            return new RegExp(defaultOrConstrained(match[2]));\r\n        }\r\n    },\r\n    {\r\n        name: 'url-parameter-splat',\r\n        pattern: /^\\*([a-zA-Z0-9-_]*[a-zA-Z0-9]{1})/,\r\n        regex: /([^?]*)/\r\n    },\r\n    {\r\n        name: 'url-parameter-matrix',\r\n        pattern: /^;([a-zA-Z0-9-_]*[a-zA-Z0-9]{1})(<(.+?)>)?/,\r\n        regex: function (match) {\r\n            return new RegExp(';' + match[1] + '=' + defaultOrConstrained(match[2]));\r\n        }\r\n    },\r\n    {\r\n        name: 'query-parameter',\r\n        pattern: /^(?:\\?|&)(?::)?([a-zA-Z0-9-_]*[a-zA-Z0-9]{1})/\r\n    },\r\n    {\r\n        name: 'delimiter',\r\n        pattern: /^(\\/|\\?)/,\r\n        regex: function (match) { return new RegExp('\\\\' + match[0]); }\r\n    },\r\n    {\r\n        name: 'sub-delimiter',\r\n        pattern: /^(!|&|-|_|\\.|;)/,\r\n        regex: function (match) { return new RegExp(match[0]); }\r\n    },\r\n    {\r\n        name: 'fragment',\r\n        pattern: /^([0-9a-zA-Z]+)/,\r\n        regex: function (match) { return new RegExp(match[0]); }\r\n    }\r\n];\n\nvar tokenise = function (str, tokens) {\r\n    if (tokens === void 0) { tokens = []; }\r\n    // Look for a matching rule\r\n    var matched = rules.some(function (rule) {\r\n        var match = str.match(rule.pattern);\r\n        if (!match) {\r\n            return false;\r\n        }\r\n        tokens.push({\r\n            type: rule.name,\r\n            match: match[0],\r\n            val: match.slice(1, 2),\r\n            otherVal: match.slice(2),\r\n            regex: rule.regex instanceof Function ? rule.regex(match) : rule.regex\r\n        });\r\n        if (match[0].length < str.length) {\r\n            tokens = tokenise(str.substr(match[0].length), tokens);\r\n        }\r\n        return true;\r\n    });\r\n    // If no rules matched, throw an error (possible malformed path)\r\n    if (!matched) {\r\n        throw new Error(\"Could not parse path '\" + str + \"'\");\r\n    }\r\n    return tokens;\r\n};\n\nvar identity = function (_) { return _; };\r\nvar exists = function (val) { return val !== undefined && val !== null; };\r\nvar optTrailingSlash = function (source, strictTrailingSlash) {\r\n    if (strictTrailingSlash) {\r\n        return source;\r\n    }\r\n    if (source === '\\\\/') {\r\n        return source;\r\n    }\r\n    return source.replace(/\\\\\\/$/, '') + '(?:\\\\/)?';\r\n};\r\nvar upToDelimiter = function (source, delimiter) {\r\n    if (!delimiter) {\r\n        return source;\r\n    }\r\n    return /(\\/)$/.test(source) ? source : source + '(\\\\/|\\\\?|\\\\.|;|$)';\r\n};\r\nvar appendQueryParam = function (params, param, val) {\r\n    if (val === void 0) { val = ''; }\r\n    var existingVal = params[param];\r\n    if (existingVal === undefined) {\r\n        params[param] = val;\r\n    }\r\n    else {\r\n        params[param] = Array.isArray(existingVal)\r\n            ? existingVal.concat(val)\r\n            : [existingVal, val];\r\n    }\r\n    return params;\r\n};\r\nvar Path = /** @class */ (function () {\r\n    function Path(path) {\r\n        if (!path) {\r\n            throw new Error('Missing path in Path constructor');\r\n        }\r\n        this.path = path;\r\n        this.tokens = tokenise(path);\r\n        this.hasUrlParams =\r\n            this.tokens.filter(function (t) { return /^url-parameter/.test(t.type); }).length > 0;\r\n        this.hasSpatParam =\r\n            this.tokens.filter(function (t) { return /splat$/.test(t.type); }).length > 0;\r\n        this.hasMatrixParams =\r\n            this.tokens.filter(function (t) { return /matrix$/.test(t.type); }).length > 0;\r\n        this.hasQueryParams =\r\n            this.tokens.filter(function (t) { return /^query-parameter/.test(t.type); }).length > 0;\r\n        // Extract named parameters from tokens\r\n        this.spatParams = this.getParams('url-parameter-splat');\r\n        this.urlParams = this.getParams(/^url-parameter/);\r\n        // Query params\r\n        this.queryParams = this.getParams('query-parameter');\r\n        // All params\r\n        this.params = this.urlParams.concat(this.queryParams);\r\n        // Check if hasQueryParams\r\n        // Regular expressions for url part only (full and partial match)\r\n        this.source = this.tokens\r\n            .filter(function (t) { return t.regex !== undefined; })\r\n            .map(function (r) { return r.regex.source; })\r\n            .join('');\r\n    }\r\n    Path.createPath = function (path) {\r\n        return new Path(path);\r\n    };\r\n    Path.prototype.isQueryParam = function (name) {\r\n        return this.queryParams.indexOf(name) !== -1;\r\n    };\r\n    Path.prototype.test = function (path, opts) {\r\n        var _this = this;\r\n        var options = __assign({ strictTrailingSlash: false, queryParams: {} }, opts);\r\n        // trailingSlash: falsy => non optional, truthy => optional\r\n        var source = optTrailingSlash(this.source, options.strictTrailingSlash);\r\n        // Check if exact match\r\n        var match = this.urlTest(path, source + (this.hasQueryParams ? '(\\\\?.*$|$)' : '$'), opts);\r\n        // If no match, or no query params, no need to go further\r\n        if (!match || !this.hasQueryParams) {\r\n            return match;\r\n        }\r\n        // Extract query params\r\n        var queryParams = parse(path, options.queryParams);\r\n        var unexpectedQueryParams = Object.keys(queryParams).filter(function (p) { return !_this.isQueryParam(p); });\r\n        if (unexpectedQueryParams.length === 0) {\r\n            // Extend url match\r\n            Object.keys(queryParams).forEach(function (p) { return (match[p] = queryParams[p]); });\r\n            return match;\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.partialTest = function (path, opts) {\r\n        var _this = this;\r\n        var options = __assign({ delimited: true, queryParams: {} }, opts);\r\n        // Check if partial match (start of given path matches regex)\r\n        // trailingSlash: falsy => non optional, truthy => optional\r\n        var source = upToDelimiter(this.source, options.delimited);\r\n        var match = this.urlTest(path, source, options);\r\n        if (!match) {\r\n            return match;\r\n        }\r\n        if (!this.hasQueryParams) {\r\n            return match;\r\n        }\r\n        var queryParams = parse(path, options.queryParams);\r\n        Object.keys(queryParams)\r\n            .filter(function (p) { return _this.isQueryParam(p); })\r\n            .forEach(function (p) { return appendQueryParam(match, p, queryParams[p]); });\r\n        return match;\r\n    };\r\n    Path.prototype.build = function (params, opts) {\r\n        var _this = this;\r\n        if (params === void 0) { params = {}; }\r\n        var options = __assign({ ignoreConstraints: false, ignoreSearch: false, queryParams: {} }, opts);\r\n        var encodedUrlParams = Object.keys(params)\r\n            .filter(function (p) { return !_this.isQueryParam(p); })\r\n            .reduce(function (acc, key) {\r\n            if (!exists(params[key])) {\r\n                return acc;\r\n            }\r\n            var val = params[key];\r\n            var encode = _this.isQueryParam(key) ? identity : encodeURI;\r\n            if (typeof val === 'boolean') {\r\n                acc[key] = val;\r\n            }\r\n            else if (Array.isArray(val)) {\r\n                acc[key] = val.map(encode);\r\n            }\r\n            else {\r\n                acc[key] = encode(val);\r\n            }\r\n            return acc;\r\n        }, {});\r\n        // Check all params are provided (not search parameters which are optional)\r\n        if (this.urlParams.some(function (p) { return !exists(params[p]); })) {\r\n            var missingParameters = this.urlParams.filter(function (p) { return !exists(params[p]); });\r\n            throw new Error(\"Cannot build path: '\" +\r\n                this.path +\r\n                \"' requires missing parameters { \" +\r\n                missingParameters.join(', ') +\r\n                ' }');\r\n        }\r\n        // Check constraints\r\n        if (!options.ignoreConstraints) {\r\n            var constraintsPassed = this.tokens\r\n                .filter(function (t) {\r\n                return /^url-parameter/.test(t.type) && !/-splat$/.test(t.type);\r\n            })\r\n                .every(function (t) {\r\n                return new RegExp('^' + defaultOrConstrained(t.otherVal[0]) + '$').test(encodedUrlParams[t.val]);\r\n            });\r\n            if (!constraintsPassed) {\r\n                throw new Error(\"Some parameters of '\" + this.path + \"' are of invalid format\");\r\n            }\r\n        }\r\n        var base = this.tokens\r\n            .filter(function (t) { return /^query-parameter/.test(t.type) === false; })\r\n            .map(function (t) {\r\n            if (t.type === 'url-parameter-matrix') {\r\n                return \";\" + t.val + \"=\" + encodedUrlParams[t.val[0]];\r\n            }\r\n            return /^url-parameter/.test(t.type)\r\n                ? encodedUrlParams[t.val[0]]\r\n                : t.match;\r\n        })\r\n            .join('');\r\n        if (options.ignoreSearch) {\r\n            return base;\r\n        }\r\n        var searchParams = this.queryParams\r\n            .filter(function (p) { return Object.keys(params).indexOf(p) !== -1; })\r\n            .reduce(function (sparams, paramName) {\r\n            sparams[paramName] = params[paramName];\r\n            return sparams;\r\n        }, {});\r\n        var searchPart = build(searchParams, options.queryParams);\r\n        return searchPart ? base + '?' + searchPart : base;\r\n    };\r\n    Path.prototype.getParams = function (type) {\r\n        var predicate = type instanceof RegExp\r\n            ? function (t) { return type.test(t.type); }\r\n            : function (t) { return t.type === type; };\r\n        return this.tokens.filter(predicate).map(function (t) { return t.val[0]; });\r\n    };\r\n    Path.prototype.urlTest = function (path, source, _a) {\r\n        var _this = this;\r\n        var _b = (_a === void 0 ? {} : _a).caseSensitive, caseSensitive = _b === void 0 ? false : _b;\r\n        var regex = new RegExp('^' + source, caseSensitive ? '' : 'i');\r\n        var match = path.match(regex);\r\n        if (!match) {\r\n            return null;\r\n        }\r\n        else if (!this.urlParams.length) {\r\n            return {};\r\n        }\r\n        // Reduce named params to key-value pairs\r\n        return match\r\n            .slice(1, this.urlParams.length + 1)\r\n            .reduce(function (params, m, i) {\r\n            params[_this.urlParams[i]] = decodeURIComponent(m);\r\n            return params;\r\n        }, {});\r\n    };\r\n    return Path;\r\n}());\n\nexport default Path;\nexport { Path };\n","import { build, omit, parse } from 'search-params';\nimport { Path } from 'path-parser';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\nvar getMetaFromSegments = function (segments) {\r\n    var accName = '';\r\n    return segments.reduce(function (meta, segment) {\r\n        var urlParams = segment.parser.urlParams.reduce(function (params, p) {\r\n            params[p] = 'url';\r\n            return params;\r\n        }, {});\r\n        var allParams = segment.parser.queryParams.reduce(function (params, p) {\r\n            params[p] = 'query';\r\n            return params;\r\n        }, urlParams);\r\n        if (segment.name !== undefined) {\r\n            accName = accName ? accName + '.' + segment.name : segment.name;\r\n            meta[accName] = allParams;\r\n        }\r\n        return meta;\r\n    }, {});\r\n};\r\nvar buildStateFromMatch = function (match) {\r\n    if (!match || !match.segments || !match.segments.length) {\r\n        return null;\r\n    }\r\n    var name = match.segments\r\n        .map(function (segment) { return segment.name; })\r\n        .filter(function (name) { return name; })\r\n        .join('.');\r\n    var params = match.params;\r\n    return {\r\n        name: name,\r\n        params: params,\r\n        meta: getMetaFromSegments(match.segments)\r\n    };\r\n};\r\nvar buildPathFromSegments = function (segments, params, options) {\r\n    if (params === void 0) { params = {}; }\r\n    if (options === void 0) { options = {}; }\r\n    if (!segments) {\r\n        return null;\r\n    }\r\n    var _a = options.queryParamsMode, queryParamsMode = _a === void 0 ? 'default' : _a, _b = options.trailingSlashMode;\r\n    var searchParams = [];\r\n    var nonSearchParams = [];\r\n    for (var _i = 0, segments_1 = segments; _i < segments_1.length; _i++) {\r\n        var segment = segments_1[_i];\r\n        var parser = segment.parser;\r\n        searchParams.push.apply(searchParams, parser.queryParams);\r\n        nonSearchParams.push.apply(nonSearchParams, parser.urlParams);\r\n        nonSearchParams.push.apply(nonSearchParams, parser.spatParams);\r\n    }\r\n    if (queryParamsMode === 'loose') {\r\n        var extraParams = Object.keys(params).reduce(function (acc, p) {\r\n            return searchParams.indexOf(p) === -1 &&\r\n                nonSearchParams.indexOf(p) === -1\r\n                ? acc.concat(p)\r\n                : acc;\r\n        }, []);\r\n        searchParams.push.apply(searchParams, extraParams);\r\n    }\r\n    var searchParamsObject = searchParams.reduce(function (acc, paramName) {\r\n        if (Object.keys(params).indexOf(paramName) !== -1) {\r\n            acc[paramName] = params[paramName];\r\n        }\r\n        return acc;\r\n    }, {});\r\n    var searchPart = build(searchParamsObject, options.queryParams);\r\n    var path = segments\r\n        .reduce(function (path, segment) {\r\n        var segmentPath = segment.parser.build(params, {\r\n            ignoreSearch: true,\r\n            queryParams: options.queryParams\r\n        });\r\n        return segment.absolute ? segmentPath : path + segmentPath;\r\n    }, '')\r\n        .replace(/\\/\\/{1,}/g, '/');\r\n    var finalPath = path;\r\n    if (options.trailingSlashMode === 'always') {\r\n        finalPath = /\\/$/.test(path) ? path : path + \"/\";\r\n    }\r\n    else if (options.trailingSlashMode === 'never' && path !== '/') {\r\n        finalPath = /\\/$/.test(path) ? path.slice(0, -1) : path;\r\n    }\r\n    return finalPath + (searchPart ? '?' + searchPart : '');\r\n};\r\nvar getPathFromSegments = function (segments) {\r\n    return segments ? segments.map(function (segment) { return segment.path; }).join('') : null;\r\n};\n\nvar getPath = function (path) { return path.split('?')[0]; };\r\nvar getSearch = function (path) { return path.split('?')[1] || ''; };\r\nvar matchChildren = function (nodes, pathSegment, currentMatch, options, consumedBefore) {\r\n    if (options === void 0) { options = {}; }\r\n    var _a = options.queryParamsMode, queryParamsMode = _a === void 0 ? 'default' : _a, _b = options.strictTrailingSlash, strictTrailingSlash = _b === void 0 ? false : _b, _c = options.strongMatching, strongMatching = _c === void 0 ? true : _c, _d = options.caseSensitive, caseSensitive = _d === void 0 ? false : _d;\r\n    var isRoot = nodes.length === 1 && nodes[0].name === '';\r\n    var _loop_1 = function (child) {\r\n        // Partially match path\r\n        var match;\r\n        var remainingPath = void 0;\r\n        var segment = pathSegment;\r\n        if (consumedBefore === '/' && child.path === '/') {\r\n            // when we encounter repeating slashes we add the slash\r\n            // back to the URL to make it de facto pathless\r\n            segment = '/' + pathSegment;\r\n        }\r\n        if (!child.children.length) {\r\n            match = child.parser.test(segment, {\r\n                caseSensitive: caseSensitive,\r\n                strictTrailingSlash: strictTrailingSlash,\r\n                queryParams: options.queryParams\r\n            });\r\n        }\r\n        if (!match) {\r\n            match = child.parser.partialTest(segment, {\r\n                delimited: strongMatching,\r\n                caseSensitive: caseSensitive,\r\n                queryParams: options.queryParams\r\n            });\r\n        }\r\n        if (match) {\r\n            // Remove consumed segment from path\r\n            var consumedPath = child.parser.build(match, {\r\n                ignoreSearch: true\r\n            });\r\n            if (!strictTrailingSlash && !child.children.length) {\r\n                consumedPath = consumedPath.replace(/\\/$/, '');\r\n            }\r\n            remainingPath = segment.replace(new RegExp('^' + consumedPath, 'i'), '');\r\n            if (!strictTrailingSlash && !child.children.length) {\r\n                remainingPath = remainingPath.replace(/^\\/\\?/, '?');\r\n            }\r\n            var querystring = omit(getSearch(segment.replace(consumedPath, '')), child.parser.queryParams, options.queryParams).querystring;\r\n            remainingPath =\r\n                getPath(remainingPath) + (querystring ? \"?\" + querystring : '');\r\n            if (!strictTrailingSlash &&\r\n                !isRoot &&\r\n                remainingPath === '/' &&\r\n                !/\\/$/.test(consumedPath)) {\r\n                remainingPath = '';\r\n            }\r\n            currentMatch.segments.push(child);\r\n            Object.keys(match).forEach(function (param) { return (currentMatch.params[param] = match[param]); });\r\n            if (!isRoot && !remainingPath.length) {\r\n                return { value: currentMatch };\r\n            }\r\n            if (!isRoot &&\r\n                queryParamsMode !== 'strict' &&\r\n                remainingPath.indexOf('?') === 0) {\r\n                // unmatched queryParams in non strict mode\r\n                var remainingQueryParams_1 = parse(remainingPath.slice(1), options.queryParams);\r\n                Object.keys(remainingQueryParams_1).forEach(function (name) {\r\n                    return (currentMatch.params[name] = remainingQueryParams_1[name]);\r\n                });\r\n                return { value: currentMatch };\r\n            }\r\n            // Continue matching on non absolute children\r\n            var children = child.getNonAbsoluteChildren();\r\n            // If no children to match against but unmatched path left\r\n            if (!children.length) {\r\n                return { value: null };\r\n            }\r\n            return { value: matchChildren(children, remainingPath, currentMatch, options, consumedPath) };\r\n        }\r\n    };\r\n    // for (child of node.children) {\r\n    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\r\n        var child = nodes_1[_i];\r\n        var state_1 = _loop_1(child);\r\n        if (typeof state_1 === \"object\")\r\n            return state_1.value;\r\n    }\r\n    return null;\r\n};\n\nvar sortChildren = (function (originalChildren) { return function (left, right) {\r\n    var leftPath = left.path\r\n        .replace(/<.*?>/g, '')\r\n        .split('?')[0]\r\n        .replace(/(.+)\\/$/, '$1');\r\n    var rightPath = right.path\r\n        .replace(/<.*?>/g, '')\r\n        .split('?')[0]\r\n        .replace(/(.+)\\/$/, '$1');\r\n    // '/' last\r\n    if (leftPath === '/') {\r\n        return 1;\r\n    }\r\n    if (rightPath === '/') {\r\n        return -1;\r\n    }\r\n    // Spat params last\r\n    if (left.parser.hasSpatParam) {\r\n        return 1;\r\n    }\r\n    if (right.parser.hasSpatParam) {\r\n        return -1;\r\n    }\r\n    // No spat, number of segments (less segments last)\r\n    var leftSegments = (leftPath.match(/\\//g) || []).length;\r\n    var rightSegments = (rightPath.match(/\\//g) || []).length;\r\n    if (leftSegments < rightSegments) {\r\n        return 1;\r\n    }\r\n    if (leftSegments > rightSegments) {\r\n        return -1;\r\n    }\r\n    // Same number of segments, number of URL params ascending\r\n    var leftParamsCount = left.parser.urlParams.length;\r\n    var rightParamsCount = right.parser.urlParams.length;\r\n    if (leftParamsCount < rightParamsCount) {\r\n        return -1;\r\n    }\r\n    if (leftParamsCount > rightParamsCount) {\r\n        return 1;\r\n    }\r\n    // Same number of segments and params, last segment length descending\r\n    var leftParamLength = (leftPath.split('/').slice(-1)[0] || '').length;\r\n    var rightParamLength = (rightPath.split('/').slice(-1)[0] || '').length;\r\n    if (leftParamLength < rightParamLength) {\r\n        return 1;\r\n    }\r\n    if (leftParamLength > rightParamLength) {\r\n        return -1;\r\n    }\r\n    // Same last segment length, preserve definition order. Note that we\r\n    // cannot just return 0, as sort is not guaranteed to be a stable sort.\r\n    return originalChildren.indexOf(left) - originalChildren.indexOf(right);\r\n}; });\n\nvar defaultBuildOptions = {\r\n    queryParamsMode: 'default',\r\n    trailingSlashMode: 'default'\r\n};\r\nvar defaultMatchOptions = __assign({}, defaultBuildOptions, { strongMatching: true });\r\nvar RouteNode = /** @class */ (function () {\r\n    function RouteNode(name, path, childRoutes, cb, parent) {\r\n        if (name === void 0) { name = ''; }\r\n        if (path === void 0) { path = ''; }\r\n        if (childRoutes === void 0) { childRoutes = []; }\r\n        this.name = name;\r\n        this.absolute = /^~/.test(path);\r\n        this.path = this.absolute ? path.slice(1) : path;\r\n        this.parser = this.path ? new Path(this.path) : null;\r\n        this.children = [];\r\n        this.parent = parent;\r\n        this.checkParents();\r\n        this.add(childRoutes, cb);\r\n        return this;\r\n    }\r\n    RouteNode.prototype.getParentSegments = function (segments) {\r\n        if (segments === void 0) { segments = []; }\r\n        return this.parent && this.parent.parser\r\n            ? this.parent.getParentSegments(segments.concat(this.parent))\r\n            : segments.reverse();\r\n    };\r\n    RouteNode.prototype.setParent = function (parent) {\r\n        this.parent = parent;\r\n        this.checkParents();\r\n    };\r\n    RouteNode.prototype.setPath = function (path) {\r\n        if (path === void 0) { path = ''; }\r\n        this.path = path;\r\n        this.parser = path ? new Path(path) : null;\r\n    };\r\n    RouteNode.prototype.add = function (route, cb) {\r\n        var _this = this;\r\n        if (route === undefined || route === null) {\r\n            return;\r\n        }\r\n        if (route instanceof Array) {\r\n            route.forEach(function (r) { return _this.add(r, cb); });\r\n            return;\r\n        }\r\n        if (!(route instanceof RouteNode) && !(route instanceof Object)) {\r\n            throw new Error('RouteNode.add() expects routes to be an Object or an instance of RouteNode.');\r\n        }\r\n        else if (route instanceof RouteNode) {\r\n            route.setParent(this);\r\n            this.addRouteNode(route);\r\n        }\r\n        else {\r\n            if (!route.name || !route.path) {\r\n                throw new Error('RouteNode.add() expects routes to have a name and a path defined.');\r\n            }\r\n            var routeNode = new RouteNode(route.name, route.path, route.children, cb, this);\r\n            var fullName = routeNode\r\n                .getParentSegments([routeNode])\r\n                .map(function (_) { return _.name; })\r\n                .join('.');\r\n            if (cb) {\r\n                cb(__assign({}, route, { name: fullName }));\r\n            }\r\n            this.addRouteNode(routeNode);\r\n        }\r\n        return this;\r\n    };\r\n    RouteNode.prototype.addNode = function (name, path) {\r\n        this.add(new RouteNode(name, path));\r\n        return this;\r\n    };\r\n    RouteNode.prototype.getPath = function (routeName) {\r\n        return getPathFromSegments(this.getSegmentsByName(routeName));\r\n    };\r\n    RouteNode.prototype.getNonAbsoluteChildren = function () {\r\n        return this.children.filter(function (child) { return !child.absolute; });\r\n    };\r\n    RouteNode.prototype.buildPath = function (routeName, params, options) {\r\n        if (params === void 0) { params = {}; }\r\n        if (options === void 0) { options = {}; }\r\n        var path = buildPathFromSegments(this.getSegmentsByName(routeName), params, options);\r\n        return path;\r\n    };\r\n    RouteNode.prototype.buildState = function (name, params) {\r\n        if (params === void 0) { params = {}; }\r\n        var segments = this.getSegmentsByName(name);\r\n        if (!segments || !segments.length) {\r\n            return null;\r\n        }\r\n        return {\r\n            name: name,\r\n            params: params,\r\n            meta: getMetaFromSegments(segments)\r\n        };\r\n    };\r\n    RouteNode.prototype.matchPath = function (path, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (path === '' && !options.strictTrailingSlash) {\r\n            path = '/';\r\n        }\r\n        var match = this.getSegmentsMatchingPath(path, options);\r\n        if (match) {\r\n            var matchedSegments = match.segments;\r\n            if (matchedSegments[0].absolute) {\r\n                var firstSegmentParams = matchedSegments[0].getParentSegments();\r\n                matchedSegments.reverse();\r\n                matchedSegments.push.apply(matchedSegments, firstSegmentParams);\r\n                matchedSegments.reverse();\r\n            }\r\n            var lastSegment = matchedSegments[matchedSegments.length - 1];\r\n            var lastSegmentSlashChild = lastSegment.findSlashChild();\r\n            if (lastSegmentSlashChild) {\r\n                matchedSegments.push(lastSegmentSlashChild);\r\n            }\r\n        }\r\n        return buildStateFromMatch(match);\r\n    };\r\n    RouteNode.prototype.addRouteNode = function (route, cb) {\r\n        var names = route.name.split('.');\r\n        if (names.length === 1) {\r\n            // Check duplicated routes\r\n            if (this.children.map(function (child) { return child.name; }).indexOf(route.name) !==\r\n                -1) {\r\n                throw new Error(\"Alias \\\"\" + route.name + \"\\\" is already defined in route node\");\r\n            }\r\n            // Check duplicated paths\r\n            if (this.children.map(function (child) { return child.path; }).indexOf(route.path) !==\r\n                -1) {\r\n                throw new Error(\"Path \\\"\" + route.path + \"\\\" is already defined in route node\");\r\n            }\r\n            this.children.push(route);\r\n            // Push greedy spats to the bottom of the pile\r\n            var originalChildren = this.children.slice(0);\r\n            this.children.sort(sortChildren(originalChildren));\r\n        }\r\n        else {\r\n            // Locate parent node\r\n            var segments = this.getSegmentsByName(names.slice(0, -1).join('.'));\r\n            if (segments) {\r\n                route.name = names[names.length - 1];\r\n                segments[segments.length - 1].add(route);\r\n            }\r\n            else {\r\n                throw new Error(\"Could not add route named '\" + route.name + \"', parent is missing.\");\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    RouteNode.prototype.checkParents = function () {\r\n        if (this.absolute && this.hasParentsParams()) {\r\n            throw new Error('[RouteNode] A RouteNode with an abolute path cannot have parents with route parameters');\r\n        }\r\n    };\r\n    RouteNode.prototype.hasParentsParams = function () {\r\n        if (this.parent && this.parent.parser) {\r\n            var parser = this.parent.parser;\r\n            var hasParams = parser.hasUrlParams ||\r\n                parser.hasSpatParam ||\r\n                parser.hasMatrixParams ||\r\n                parser.hasQueryParams;\r\n            return hasParams || this.parent.hasParentsParams();\r\n        }\r\n        return false;\r\n    };\r\n    RouteNode.prototype.findAbsoluteChildren = function () {\r\n        return this.children.reduce(function (absoluteChildren, child) {\r\n            return absoluteChildren\r\n                .concat(child.absolute ? child : [])\r\n                .concat(child.findAbsoluteChildren());\r\n        }, []);\r\n    };\r\n    RouteNode.prototype.findSlashChild = function () {\r\n        var slashChildren = this.getNonAbsoluteChildren().filter(function (child) { return child.parser && /^\\/(\\?|$)/.test(child.parser.path); });\r\n        return slashChildren[0];\r\n    };\r\n    RouteNode.prototype.getSegmentsByName = function (routeName) {\r\n        var findSegmentByName = function (name, routes) {\r\n            var filteredRoutes = routes.filter(function (r) { return r.name === name; });\r\n            return filteredRoutes.length ? filteredRoutes[0] : undefined;\r\n        };\r\n        var segments = [];\r\n        var routes = this.parser ? [this] : this.children;\r\n        var names = (this.parser ? [''] : []).concat(routeName.split('.'));\r\n        var matched = names.every(function (name) {\r\n            var segment = findSegmentByName(name, routes);\r\n            if (segment) {\r\n                routes = segment.children;\r\n                segments.push(segment);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return matched ? segments : null;\r\n    };\r\n    RouteNode.prototype.getSegmentsMatchingPath = function (path, options) {\r\n        var topLevelNodes = this.parser ? [this] : this.children;\r\n        var startingNodes = topLevelNodes.reduce(function (nodes, node) { return nodes.concat(node, node.findAbsoluteChildren()); }, []);\r\n        var currentMatch = {\r\n            segments: [],\r\n            params: {}\r\n        };\r\n        var finalMatch = matchChildren(startingNodes, path, currentMatch, options);\r\n        if (finalMatch &&\r\n            finalMatch.segments.length === 1 &&\r\n            finalMatch.segments[0].name === '') {\r\n            return null;\r\n        }\r\n        return finalMatch;\r\n    };\r\n    return RouteNode;\r\n}());\n\nexport default RouteNode;\n","export var errorCodes = {\n    ROUTER_NOT_STARTED: 'NOT_STARTED',\n    NO_START_PATH_OR_STATE: 'NO_START_PATH_OR_STATE',\n    ROUTER_ALREADY_STARTED: 'ALREADY_STARTED',\n    ROUTE_NOT_FOUND: 'ROUTE_NOT_FOUND',\n    SAME_STATES: 'SAME_STATES',\n    CANNOT_DEACTIVATE: 'CANNOT_DEACTIVATE',\n    CANNOT_ACTIVATE: 'CANNOT_ACTIVATE',\n    TRANSITION_ERR: 'TRANSITION_ERR',\n    TRANSITION_CANCELLED: 'CANCELLED'\n};\n\nvar constants = {\n    UNKNOWN_ROUTE: '@@router5/UNKNOWN_ROUTE',\n    ROUTER_START: '$start',\n    ROUTER_STOP: '$stop',\n    TRANSITION_START: '$$start',\n    TRANSITION_CANCEL: '$$cancel',\n    TRANSITION_SUCCESS: '$$success',\n    TRANSITION_ERROR: '$$error'\n};\n\nexport default constants;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport constants from '../constants';\n\nexport default function withUtils(router) {\n    router.isActive = isActive;\n    router.areStatesEqual = areStatesEqual;\n    router.areStatesDescendants = areStatesDescendants;\n    router.buildPath = buildPath;\n    router.buildState = buildState;\n    router.matchPath = matchPath;\n    router.setRootPath = setRootPath;\n\n    /**\n     * Check if a route is currently active\n     * @param  {String}  name                     The route name\n     * @param  {Object}  params                   The route params\n     * @param  {Boolean} [strictEquality=false]   Whether to check if the given route is the active route, or part of the active route\n     * @param  {Boolean} [ignoreQueryParams=true] Whether to ignore query parameters\n     * @return {Boolean}                          Whether the given route is active\n     */\n    function isActive(name) {\n        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var strictEquality = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var ignoreQueryParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n        var activeState = router.getState();\n\n        if (!activeState) return false;\n\n        if (strictEquality || activeState.name === name) {\n            return areStatesEqual(router.makeState(name, params), activeState, ignoreQueryParams);\n        }\n\n        return areStatesDescendants(router.makeState(name, params), activeState);\n    }\n\n    /**\n     * Compare two route state objects\n     * @param  {Object}  state1            The route state\n     * @param  {Object}  state2            The other route state\n     * @param  {Boolean} ignoreQueryParams Whether to ignore query parameters or not\n     * @return {Boolean}                   Whether the two route state are equal or not\n     */\n    function areStatesEqual(state1, state2) {\n        var ignoreQueryParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        if (state1.name !== state2.name) return false;\n\n        var getUrlParams = function getUrlParams(name) {\n            return router.rootNode.getSegmentsByName(name).map(function (segment) {\n                return segment.parser['urlParams'];\n            }).reduce(function (params, p) {\n                return params.concat(p);\n            }, []);\n        };\n\n        var state1Params = ignoreQueryParams ? getUrlParams(state1.name) : Object.keys(state1.params);\n        var state2Params = ignoreQueryParams ? getUrlParams(state2.name) : Object.keys(state2.params);\n\n        return state1Params.length === state2Params.length && state1Params.every(function (p) {\n            return state1.params[p] === state2.params[p];\n        });\n    }\n\n    /**\n     * Check if two states are related\n     * @param  {State} parentState  The parent state\n     * @param  {State} childState   The child state\n     * @return {Boolean}            Whether the two states are descendants or not\n     */\n    function areStatesDescendants(parentState, childState) {\n        var regex = new RegExp('^' + parentState.name + '\\\\.(.*)$');\n        if (!regex.test(childState.name)) return false;\n        // If child state name extends parent state name, and all parent state params\n        // are in child state params.\n        return Object.keys(parentState.params).every(function (p) {\n            return parentState.params[p] === childState.params[p];\n        });\n    }\n\n    /**\n     * Build a path\n     * @param  {String} route  The route name\n     * @param  {Object} params The route params\n     * @return {String}        The path\n     */\n    function buildPath(route, params) {\n        if (route === constants.UNKNOWN_ROUTE) {\n            return params.path;\n        }\n\n        var _router$getOptions = router.getOptions(),\n            trailingSlashMode = _router$getOptions.trailingSlashMode,\n            queryParamsMode = _router$getOptions.queryParamsMode,\n            queryParams = _router$getOptions.queryParams;\n\n        var encodedParams = router.config.encoders[route] ? router.config.encoders[route](params) : params;\n\n        return router.rootNode.buildPath(route, encodedParams, {\n            trailingSlashMode: trailingSlashMode,\n            queryParamsMode: queryParamsMode,\n            queryParams: queryParams\n        });\n    }\n\n    function forwardState(routeName, routeParams) {\n        var name = router.config.forwardMap[routeName] || routeName;\n        var params = _extends({}, router.config.defaultParams[routeName], router.config.defaultParams[name], routeParams);\n\n        return {\n            name: name,\n            params: params\n        };\n    }\n\n    function buildState(routeName, routeParams) {\n        var _forwardState = forwardState(routeName, routeParams),\n            name = _forwardState.name,\n            params = _forwardState.params;\n\n        return router.rootNode.buildState(name, params);\n    }\n\n    /**\n     * Match a path\n     * @param  {String} path     The path to match\n     * @param  {String} [source] The source (optional, used internally)\n     * @return {Object}          The matched state (null if unmatched)\n     */\n    function matchPath(path, source) {\n        var options = router.getOptions();\n        var match = router.rootNode.matchPath(path, options);\n\n        if (match) {\n            var name = match.name,\n                params = match.params,\n                meta = match.meta;\n\n            var decodedParams = router.config.decoders[name] ? router.config.decoders[name](params) : params;\n\n            var _forwardState2 = forwardState(name, decodedParams),\n                routeName = _forwardState2.name,\n                routeParams = _forwardState2.params;\n\n            var builtPath = options.rewritePathOnMatch === false ? path : router.buildPath(routeName, routeParams);\n\n            return router.makeState(routeName, routeParams, builtPath, {\n                params: meta,\n                source: source\n            });\n        }\n\n        return null;\n    }\n\n    /**\n     * Set the root node path, use carefully. It can be used to set app-wide allowed query parameters.\n     * @param {String} rootPath The root node path\n     */\n    function setRootPath(rootPath) {\n        router.rootNode.setPath(rootPath);\n    }\n}","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport constants, { errorCodes } from '../constants';\n\nvar noop = function noop() {};\n\nexport default function withRouterLifecycle(router) {\n    var started = false;\n\n    router.isStarted = isStarted;\n    router.start = start;\n    router.stop = stop;\n\n    /**\n     * Check if the router is started\n     * @return {Boolean} Whether the router is started or not\n     */\n    function isStarted() {\n        return started;\n    }\n\n    /**\n     * Start the router\n     * @param  {String|Object} startPathOrState The start path or state. This is optional when using the browser plugin.\n     * @param  {Function}      done             A done node style callback (err, state)\n     * @return {Object}                         The router instance\n     */\n    function start() {\n        var _ref;\n\n        var options = router.getOptions();\n        var lastArg = (_ref = arguments.length - 1, arguments.length <= _ref ? undefined : arguments[_ref]);\n        var done = typeof lastArg === 'function' ? lastArg : noop;\n        var startPathOrState = typeof (arguments.length <= 0 ? undefined : arguments[0]) !== 'function' ? arguments.length <= 0 ? undefined : arguments[0] : undefined;\n\n        if (started) {\n            done({ code: errorCodes.ROUTER_ALREADY_STARTED });\n            return router;\n        }\n\n        var startPath = void 0,\n            startState = void 0;\n\n        started = true;\n        router.invokeEventListeners(constants.ROUTER_START);\n\n        // callback\n        var cb = function cb(err, state) {\n            var invokeErrCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            if (!err) router.invokeEventListeners(constants.TRANSITION_SUCCESS, state, null, { replace: true });\n            if (err && invokeErrCb) router.invokeEventListeners(constants.TRANSITION_ERROR, state, null, err);\n            done(err, state);\n        };\n\n        if (startPathOrState === undefined && !options.defaultRoute) {\n            return cb({ code: errorCodes.NO_START_PATH_OR_STATE });\n        }\n        if (typeof startPathOrState === 'string') {\n            startPath = startPathOrState;\n        } else if ((typeof startPathOrState === 'undefined' ? 'undefined' : _typeof(startPathOrState)) === 'object') {\n            startState = startPathOrState;\n        }\n\n        if (!startState) {\n            // If no supplied start state, get start state\n            startState = startPath === undefined ? null : router.matchPath(startPath);\n\n            // Navigate to default function\n            var navigateToDefault = function navigateToDefault() {\n                return router.navigateToDefault({ replace: true }, done);\n            };\n            var redirect = function redirect(route) {\n                return router.navigate(route.name, route.params, { replace: true, reload: true, redirected: true }, done);\n            };\n            var transitionToState = function transitionToState(state) {\n                router.transitionToState(state, router.getState(), {}, function (err, state) {\n                    if (!err) cb(null, state);else if (err.redirect) redirect(err.redirect);else if (options.defaultRoute) navigateToDefault();else cb(err, null, false);\n                });\n            };\n\n            // If matched start path\n            if (startState) {\n                transitionToState(startState);\n            } else if (options.defaultRoute) {\n                // If default, navigate to default\n                navigateToDefault();\n            } else if (options.allowNotFound) {\n                transitionToState(router.makeNotFoundState(startPath, { replace: true }));\n            } else {\n                // No start match, no default => do nothing\n                cb({ code: errorCodes.ROUTE_NOT_FOUND, path: startPath }, null);\n            }\n        } else {\n            // Initialise router with provided start state\n            router.setState(startState);\n            cb(null, startState);\n        }\n\n        return router;\n    }\n\n    /**\n     * Stop the router\n     * @return {Object} The router instance\n     */\n    function stop() {\n        if (started) {\n            router.setState(null);\n            started = false;\n            router.invokeEventListeners(constants.ROUTER_STOP);\n        }\n\n        return router;\n    }\n}","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexport function nameToIDs(name) {\n    return name.split('.').reduce(function (ids, name) {\n        return ids.concat(ids.length ? ids[ids.length - 1] + '.' + name : name);\n    }, []);\n}\n\nfunction exists(val) {\n    return val !== undefined && val !== null;\n}\n\nfunction hasMetaParams(state) {\n    return state && state.meta && state.meta.params;\n}\n\nfunction extractSegmentParams(name, state) {\n    if (!exists(state.meta.params[name])) return {};\n\n    return Object.keys(state.meta.params[name]).reduce(function (params, p) {\n        params[p] = state.params[p];\n        return params;\n    }, {});\n}\n\nexport default function transitionPath(toState, fromState) {\n    var fromStateIds = fromState ? nameToIDs(fromState.name) : [];\n    var toStateIds = nameToIDs(toState.name);\n    var maxI = Math.min(fromStateIds.length, toStateIds.length);\n\n    function pointOfDifference() {\n        var i = void 0;\n\n        var _loop = function _loop() {\n            var left = fromStateIds[i];\n            var right = toStateIds[i];\n\n            if (left !== right) return {\n                    v: i\n                };\n\n            var leftParams = extractSegmentParams(left, toState);\n            var rightParams = extractSegmentParams(right, fromState);\n\n            if (leftParams.length !== rightParams.length) return {\n                    v: i\n                };\n            if (leftParams.length === 0) return 'continue';\n\n            var different = Object.keys(leftParams).some(function (p) {\n                return rightParams[p] !== leftParams[p];\n            });\n            if (different) {\n                return {\n                    v: i\n                };\n            }\n        };\n\n        for (i = 0; i < maxI; i += 1) {\n            var _ret = _loop();\n\n            switch (_ret) {\n                case 'continue':\n                    continue;\n\n                default:\n                    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n            }\n        }\n\n        return i;\n    }\n\n    var i = void 0;\n    if (!fromState) {\n        i = 0;\n    } else if (!hasMetaParams(fromState) && !hasMetaParams(toState)) {\n        i = 0;\n    } else {\n        i = pointOfDifference();\n    }\n\n    var toDeactivate = fromStateIds.slice(i).reverse();\n    var toActivate = toStateIds.slice(i);\n\n    var intersection = fromState && i > 0 ? fromStateIds[i - 1] : '';\n\n    return {\n        intersection: intersection,\n        toDeactivate: toDeactivate,\n        toActivate: toActivate\n    };\n}","import transitionPath, { nameToIDs } from './transitionPath';\nimport shouldUpdateNode from './shouldUpdateNode';\n\nexport { shouldUpdateNode, nameToIDs };\n\nexport default transitionPath;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default function resolve(functions, _ref, callback) {\n    var isCancelled = _ref.isCancelled,\n        toState = _ref.toState,\n        fromState = _ref.fromState,\n        errorKey = _ref.errorKey;\n\n    var remainingFunctions = Array.isArray(functions) ? functions : Object.keys(functions);\n\n    var isState = function isState(obj) {\n        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj.name !== undefined && obj.params !== undefined && obj.path !== undefined;\n    };\n    var hasStateChanged = function hasStateChanged(toState, fromState) {\n        return fromState.name !== toState.name || fromState.params !== toState.params || fromState.path !== toState.path;\n    };\n\n    var mergeStates = function mergeStates(toState, fromState) {\n        return _extends({}, fromState, toState, {\n            meta: _extends({}, fromState.meta, toState.meta)\n        });\n    };\n\n    var processFn = function processFn(stepFn, errBase, state, _done) {\n        var done = function done(err, newState) {\n            if (err) {\n                _done(err);\n            } else if (newState && newState !== state && isState(newState)) {\n                if (hasStateChanged(newState, state)) {\n                    console.error('[router5][transition] Warning: state values (name, params, path) were changed during transition process.');\n                }\n\n                _done(null, mergeStates(newState, state));\n            } else {\n                _done(null, state);\n            }\n        };\n        var res = stepFn.call(null, state, fromState, done);\n        if (isCancelled()) {\n            done(null);\n        } else if (typeof res === 'boolean') {\n            done(res ? null : errBase);\n        } else if (isState(res)) {\n            done(null, res);\n        } else if (res && typeof res.then === 'function') {\n            res.then(function (resVal) {\n                if (resVal instanceof Error) done({ error: resVal }, null);else done(null, resVal);\n            }, function (err) {\n                if (err instanceof Error) {\n                    console.error(err.stack || err);\n                    done(_extends({}, errBase, { promiseError: err }), null);\n                } else {\n                    done((typeof err === 'undefined' ? 'undefined' : _typeof(err)) === 'object' ? _extends({}, errBase, err) : errBase, null);\n                }\n            });\n        }\n        // else: wait for done to be called\n    };\n\n    var next = function next(err, state) {\n        if (isCancelled()) {\n            callback();\n        } else if (err) {\n            callback(err);\n        } else {\n            if (!remainingFunctions.length) {\n                callback(null, state);\n            } else {\n                var isMapped = typeof remainingFunctions[0] === 'string';\n                var errBase = errorKey && isMapped ? _defineProperty({}, errorKey, remainingFunctions[0]) : {};\n                var stepFn = isMapped ? functions[remainingFunctions[0]] : remainingFunctions[0];\n\n                remainingFunctions = remainingFunctions.slice(1);\n\n                processFn(stepFn, errBase, state, next);\n            }\n        }\n    };\n\n    next(null, toState);\n}","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport transitionPath, { nameToIDs } from 'router5-transition-path';\nimport resolve from './resolve';\nimport constants, { errorCodes } from '../constants';\n\nexport default transition;\n\nfunction transition(router, toState, fromState, opts, callback) {\n    var cancelled = false;\n    var completed = false;\n    var options = router.getOptions();\n\n    var _router$getLifecycleF = router.getLifecycleFunctions(),\n        _router$getLifecycleF2 = _slicedToArray(_router$getLifecycleF, 2),\n        canDeactivateFunctions = _router$getLifecycleF2[0],\n        canActivateFunctions = _router$getLifecycleF2[1];\n\n    var middlewareFunctions = router.getMiddlewareFunctions();\n    var isCancelled = function isCancelled() {\n        return cancelled;\n    };\n    var cancel = function cancel() {\n        if (!cancelled && !completed) {\n            cancelled = true;\n            callback({ code: errorCodes.TRANSITION_CANCELLED }, null);\n        }\n    };\n    var done = function done(err, state) {\n        completed = true;\n\n        if (isCancelled()) {\n            return;\n        }\n\n        if (!err && options.autoCleanUp) {\n            var activeSegments = nameToIDs(toState.name);\n            Object.keys(canDeactivateFunctions).forEach(function (name) {\n                if (activeSegments.indexOf(name) === -1) router.clearCanDeactivate(name);\n            });\n        }\n\n        callback(err, state || toState);\n    };\n    var makeError = function makeError(base, err) {\n        return _extends({}, base, err instanceof Object ? err : { error: err });\n    };\n\n    var isUnknownRoute = toState.name === constants.UNKNOWN_ROUTE;\n    var asyncBase = { isCancelled: isCancelled, toState: toState, fromState: fromState };\n\n    var _transitionPath = transitionPath(toState, fromState),\n        toDeactivate = _transitionPath.toDeactivate,\n        toActivate = _transitionPath.toActivate;\n\n    var canDeactivate = !fromState || opts.forceDeactivate ? [] : function (toState, fromState, cb) {\n        var canDeactivateFunctionMap = toDeactivate.filter(function (name) {\n            return canDeactivateFunctions[name];\n        }).reduce(function (fnMap, name) {\n            return _extends({}, fnMap, _defineProperty({}, name, canDeactivateFunctions[name]));\n        }, {});\n\n        resolve(canDeactivateFunctionMap, _extends({}, asyncBase, { errorKey: 'segment' }), function (err) {\n            return cb(err ? makeError({ code: errorCodes.CANNOT_DEACTIVATE }, err) : null);\n        });\n    };\n\n    var canActivate = isUnknownRoute ? [] : function (toState, fromState, cb) {\n        var canActivateFunctionMap = toActivate.filter(function (name) {\n            return canActivateFunctions[name];\n        }).reduce(function (fnMap, name) {\n            return _extends({}, fnMap, _defineProperty({}, name, canActivateFunctions[name]));\n        }, {});\n\n        resolve(canActivateFunctionMap, _extends({}, asyncBase, { errorKey: 'segment' }), function (err) {\n            return cb(err ? makeError({ code: errorCodes.CANNOT_ACTIVATE }, err) : null);\n        });\n    };\n\n    var middleware = !middlewareFunctions.length ? [] : function (toState, fromState, cb) {\n        return resolve(middlewareFunctions, _extends({}, asyncBase), function (err, state) {\n            return cb(err ? makeError({ code: errorCodes.TRANSITION_ERR }, err) : null, state || toState);\n        });\n    };\n\n    var pipeline = [].concat(canDeactivate).concat(canActivate).concat(middleware);\n\n    resolve(pipeline, asyncBase, done);\n\n    return cancel;\n}","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport constants, { errorCodes } from '../constants';\nimport transition from '../transition';\n\nvar noop = function noop() {};\n\nexport default function withNavigation(router) {\n    var cancelCurrentTransition = void 0;\n\n    router.config.forwardMap = {};\n    router.navigate = navigate;\n    router.navigateToDefault = navigateToDefault;\n    router.transitionToState = transitionToState;\n    router.cancel = cancel;\n    router.forward = forward;\n\n    /**\n     * Cancel the current transition if there is one\n     * @return {Object} The router instance\n     */\n    function cancel() {\n        if (cancelCurrentTransition) {\n            cancelCurrentTransition('navigate');\n            cancelCurrentTransition = null;\n        }\n\n        return router;\n    }\n\n    /**\n     * Forward a route to another route, when calling navigate.\n     * Route parameters for the two routes should match to avoid issues.\n     * @param  {String}   fromRoute      The route name\n     * @param  {String}   toRoute  The route params\n     */\n    function forward(fromRoute, toRoute) {\n        router.config.forwardMap[fromRoute] = toRoute;\n\n        return router;\n    }\n\n    /**\n     * Navigate to a route\n     * @param  {String}   routeName      The route name\n     * @param  {Object}   [routeParams]  The route params\n     * @param  {Object}   [options]      The navigation options (`replace`, `reload`, `skipTransition`, `force`)\n     * @param  {Function} [done]         A done node style callback (err, state)\n     * @return {Function}                A cancel function\n     */\n    function navigate() {\n        var _ref;\n\n        var name = arguments.length <= 0 ? undefined : arguments[0];\n        var lastArg = (_ref = arguments.length - 1, arguments.length <= _ref ? undefined : arguments[_ref]);\n        var done = typeof lastArg === 'function' ? lastArg : noop;\n        var params = _typeof(arguments.length <= 1 ? undefined : arguments[1]) === 'object' ? arguments.length <= 1 ? undefined : arguments[1] : {};\n        var opts = _typeof(arguments.length <= 2 ? undefined : arguments[2]) === 'object' ? arguments.length <= 2 ? undefined : arguments[2] : {};\n\n        if (!router.isStarted()) {\n            done({ code: errorCodes.ROUTER_NOT_STARTED });\n            return;\n        }\n\n        var route = router.buildState(name, params);\n\n        if (!route) {\n            var err = { code: errorCodes.ROUTE_NOT_FOUND };\n            done(err);\n            router.invokeEventListeners(constants.TRANSITION_ERROR, null, router.getState(), err);\n            return;\n        }\n\n        var toState = router.makeState(route.name, route.params, router.buildPath(route.name, route.params), { params: route.meta, options: opts });\n        var sameStates = router.getState() ? router.areStatesEqual(router.getState(), toState, false) : false;\n\n        // Do not proceed further if states are the same and no reload\n        // (no deactivation and no callbacks)\n        if (sameStates && !opts.reload && !opts.force) {\n            var _err = { code: errorCodes.SAME_STATES };\n            done(_err);\n            router.invokeEventListeners(constants.TRANSITION_ERROR, toState, router.getState(), _err);\n            return;\n        }\n\n        var fromState = sameStates || opts.reload ? null : router.getState();\n\n        if (opts.skipTransition) {\n            done(null, toState);\n            return noop;\n        }\n\n        // Transition\n        return transitionToState(toState, fromState, opts, function (err, state) {\n            if (err) {\n                if (err.redirect) {\n                    var _err$redirect = err.redirect,\n                        _name = _err$redirect.name,\n                        _params = _err$redirect.params;\n\n\n                    navigate(_name, _params, _extends({}, opts, { force: true, redirected: true }), done);\n                } else {\n                    done(err);\n                }\n            } else {\n                router.invokeEventListeners(constants.TRANSITION_SUCCESS, state, fromState, opts);\n                done(null, state);\n            }\n        });\n    }\n\n    /**\n     * Navigate to the default route (if defined)\n     * @param  {Object}   [opts] The navigation options\n     * @param  {Function} [done] A done node style callback (err, state)\n     * @return {Function}        A cancel function\n     */\n    function navigateToDefault() {\n        var opts = _typeof(arguments.length <= 0 ? undefined : arguments[0]) === 'object' ? arguments.length <= 0 ? undefined : arguments[0] : {};\n        var done = arguments.length === 2 ? arguments.length <= 1 ? undefined : arguments[1] : typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'function' ? arguments.length <= 0 ? undefined : arguments[0] : noop;\n        var options = router.getOptions();\n\n        if (options.defaultRoute) {\n            return navigate(options.defaultRoute, options.defaultParams, opts, done);\n        }\n\n        return function () {};\n    }\n\n    function transitionToState(toState, fromState) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var done = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n\n        cancel();\n        router.invokeEventListeners(constants.TRANSITION_START, toState, fromState);\n\n        cancelCurrentTransition = transition(router, toState, fromState, options, function (err, state) {\n            cancelCurrentTransition = null;\n            state = state || toState;\n\n            if (err) {\n                if (err.code === errorCodes.TRANSITION_CANCELLED) {\n                    router.invokeEventListeners(constants.TRANSITION_CANCEL, toState, fromState);\n                } else {\n                    router.invokeEventListeners(constants.TRANSITION_ERROR, toState, fromState, err);\n                }\n                done(err);\n            } else {\n                router.setState(state);\n                done(null, state);\n            }\n        });\n\n        return cancelCurrentTransition;\n    }\n}","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport $$observable from 'symbol-observable';\n\nfunction observerPlugin(router) {\n    var listeners = [];\n\n    function unsubscribe(listener) {\n        if (listener) {\n            listeners = listeners.filter(function (l) {\n                return l !== listener;\n            });\n        }\n    }\n\n    function _subscribe(listener) {\n        var isObject = (typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) === 'object';\n        var finalListener = isObject ? listener.next.bind(listener) : listener;\n\n        listeners = listeners.concat(finalListener);\n\n        var unsubscribeHandler = function unsubscribeHandler() {\n            return unsubscribe(finalListener);\n        };\n\n        return isObject ? { unsubscribe: unsubscribeHandler } : unsubscribeHandler;\n    }\n\n    function observable() {\n        return _defineProperty({\n            subscribe: function subscribe(observer) {\n                if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object' || observer === null) {\n                    throw new TypeError('Expected the observer to be an object.');\n                }\n                return _subscribe(observer);\n            }\n        }, $$observable, function () {\n            return this;\n        });\n    }\n\n    router.subscribe = _subscribe;\n    router[$$observable] = observable;\n\n    return {\n        onTransitionSuccess: function onTransitionSuccess(toState, fromState) {\n            listeners.forEach(function (listener) {\n                return listener({\n                    route: toState,\n                    previousRoute: fromState\n                });\n            });\n        }\n    };\n}\n\nobserverPlugin.pluginName = 'OBSERVABLE_PLUGIN';\n\nexport default function withObservablePlugin(router) {\n    router.usePlugin(observerPlugin);\n}","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar pluginMethods = ['onStart', 'onStop', 'onTransitionSuccess', 'onTransitionStart', 'onTransitionError', 'onTransitionCancel'];\n\nexport default function withPlugins(router) {\n    var plugins = [];\n    var removePluginListeners = [];\n\n    router.usePlugin = usePlugin;\n    router.hasPlugin = hasPlugin;\n    router.getPlugins = getPlugins;\n\n    function getPlugins() {\n        return plugins;\n    }\n\n    /**\n     * Use plugins\n     * @param  {...Function} plugins An argument list of plugins\n     * @return {Object}              The router instance\n     */\n    function usePlugin() {\n        for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {\n            plugins[_key] = arguments[_key];\n        }\n\n        plugins.forEach(addPlugin);\n        return router;\n    }\n\n    function addPlugin(plugin) {\n        if (!hasPlugin(plugin)) {\n            plugins.push(plugin);\n            startPlugin(plugin);\n        }\n    }\n\n    /**\n     * Check if a plugin has already been registered.\n     * @param  {String}  pluginName The plugin name\n     * @return {Boolean}            Whether the plugin has been registered\n     */\n    function hasPlugin(pluginName) {\n        return plugins.filter(function (p) {\n            return p.pluginName === pluginName || p.name === pluginName;\n        }).length > 0;\n    }\n\n    function startPlugin(plugin) {\n        var appliedPlugin = router.executeFactory(plugin);\n\n        var removeEventListeners = pluginMethods.map(function (methodName) {\n            if (appliedPlugin[methodName]) {\n                return router.addEventListener(methodName.toLowerCase().replace(/^on/, '$$').replace(/transition/, '$$'), appliedPlugin[methodName]);\n            }\n        }).filter(Boolean);\n\n        removePluginListeners.push.apply(removePluginListeners, _toConsumableArray(removeEventListeners));\n    }\n}","var toFunction = function toFunction(val) {\n    return typeof val === 'function' ? val : function () {\n        return function () {\n            return val;\n        };\n    };\n};\n\nexport default function withRouteLifecycle(router) {\n    var canDeactivateFactories = {};\n    var canActivateFactories = {};\n    var canDeactivateFunctions = {};\n    var canActivateFunctions = {};\n\n    router.canDeactivate = canDeactivate;\n    router.canActivate = canActivate;\n    router.getLifecycleFactories = getLifecycleFactories;\n    router.getLifecycleFunctions = getLifecycleFunctions;\n    router.clearCanDeactivate = clearCanDeactivate;\n\n    function getLifecycleFactories() {\n        return [canDeactivateFactories, canActivateFactories];\n    }\n\n    function getLifecycleFunctions() {\n        return [canDeactivateFunctions, canActivateFunctions];\n    }\n\n    /**\n     * Register a canDeactivate handler or specify a if a route can be deactivated\n     * @param  {String} name                           The route name\n     * @param  {Function|Boolean} canDeactivateHandler The canDeactivate handler or boolean\n     * @return {Object}                                The router instance\n     */\n    function canDeactivate(name, canDeactivateHandler) {\n        var factory = toFunction(canDeactivateHandler);\n\n        canDeactivateFactories[name] = factory;\n        canDeactivateFunctions[name] = router.executeFactory(factory);\n\n        return router;\n    }\n\n    /**\n     * Remove a canDeactivate handler for a route\n     * @param  {String} name The route name\n     * @return {Object}      The router instance\n     */\n    function clearCanDeactivate(name) {\n        canDeactivateFactories[name] = undefined;\n        canDeactivateFunctions[name] = undefined;\n\n        return router;\n    }\n\n    /**\n     * Register a canActivate handler or specify a if a route can be deactivated\n     * @param  {String} name                         The route name\n     * @param  {Function|Boolean} canActivateHandler The canActivate handler or boolean\n     * @return {Object}                              The router instance\n     */\n    function canActivate(name, canActivateHandler) {\n        var factory = toFunction(canActivateHandler);\n\n        canActivateFactories[name] = factory;\n        canActivateFunctions[name] = router.executeFactory(factory);\n\n        return router;\n    }\n}","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nexport default function withCloning(router, createRouter) {\n    router.clone = clone;\n\n    /**\n     * Clone the current router configuration. The new returned router will be non-started,\n     * with a null state\n     * @param  {[type]} deps [description]\n     * @return {[type]}      [description]\n     */\n    function clone() {\n        var deps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        var clonedDependencies = _extends({}, router.getDependencies(), deps);\n        var clonedRouter = createRouter(router.rootNode, router.getOptions(), clonedDependencies);\n\n        clonedRouter.useMiddleware.apply(clonedRouter, _toConsumableArray(router.getMiddlewareFactories()));\n        clonedRouter.usePlugin.apply(clonedRouter, _toConsumableArray(router.getPlugins()));\n        clonedRouter.config = router.config;\n\n        var _router$getLifecycleF = router.getLifecycleFactories(),\n            _router$getLifecycleF2 = _slicedToArray(_router$getLifecycleF, 2),\n            canDeactivateFactories = _router$getLifecycleF2[0],\n            canActivateFactories = _router$getLifecycleF2[1];\n\n        Object.keys(canDeactivateFactories).forEach(function (name) {\n            return clonedRouter.canDeactivate(name, canDeactivateFactories[name]);\n        });\n        Object.keys(canActivateFactories).forEach(function (name) {\n            return clonedRouter.canActivate(name, canActivateFactories[name]);\n        });\n\n        return clonedRouter;\n    }\n}","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport RouteNode from 'route-node';\nimport withUtils from './core/utils';\nimport withRouterLifecycle from './core/router-lifecycle';\nimport withNavigation from './core/navigation';\nimport withMiddleware from './core/middleware';\nimport withObservable from './core/observable';\nimport withPlugins from './core/plugins';\nimport withRouteLifecycle from './core/route-lifecycle';\nimport withCloning from './core/clone';\nimport constants from './constants';\n\nvar defaultOptions = {\n    trailingSlashMode: 'default',\n    queryParamsMode: 'default',\n    strictTrailingSlash: false,\n    autoCleanUp: true,\n    allowNotFound: false,\n    strongMatching: true,\n    rewritePathOnMatch: true,\n    caseSensitive: false\n\n    /**\n     * Create a router\n     * @param  {Array}  [routes]          The routes\n     * @param  {Object} [options={}]      The router options\n     * @param  {Object} [dependencies={}] The router dependencies\n     * @return {Object}                   The router instance\n     */\n};function createRouter(routes) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var deps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var routerState = null;\n    var stateId = 0;\n    var callbacks = {};\n    var dependencies = deps;\n    var options = _extends({}, defaultOptions);\n\n    Object.keys(opts).forEach(function (opt) {\n        return setOption(opt, opts[opt]);\n    });\n\n    var router = {\n        config: {\n            decoders: {},\n            encoders: {},\n            defaultParams: {}\n        },\n        rootNode: rootNode,\n        getOptions: getOptions,\n        setOption: setOption,\n        getState: getState,\n        setState: setState,\n        makeState: makeState,\n        makeNotFoundState: makeNotFoundState,\n        setDependency: setDependency,\n        setDependencies: setDependencies,\n        getDependencies: getDependencies,\n        add: add,\n        addNode: addNode,\n        executeFactory: executeFactory,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n        invokeEventListeners: invokeEventListeners\n\n        /**\n         * Invoke all event listeners by event name. Possible event names are listed under constants\n         * (`import { constants } from 'router5'`): `ROUTER_START`, `ROUTER_STOP`, `TRANSITION_START`,\n         * `TRANSITION_CANCEL`, `TRANSITION_SUCCESS`, `TRANSITION_ERROR`.\n         * This method is used internally and should not be invoked directly, but it can be useful for\n         * testing purposes.\n         * @private\n         * @name invokeEventListeners\n         * @param  {String}    eventName The event name\n         */\n    };function invokeEventListeners(eventName) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n        }\n\n        ;(callbacks[eventName] || []).forEach(function (cb) {\n            return cb.apply(undefined, args);\n        });\n    }\n\n    /**\n     * Removes an event listener\n     * @private\n     * @param  {String}   eventName The event name\n     * @param  {Function} cb        The callback to remove\n     */\n    function removeEventListener(eventName, cb) {\n        callbacks[eventName] = callbacks[eventName].filter(function (_cb) {\n            return _cb !== cb;\n        });\n    }\n\n    /**\n     * Add an event listener\n     * @private\n     * @param {String}   eventName The event name\n     * @param {Function} cb        The callback to add\n     */\n    function addEventListener(eventName, cb) {\n        callbacks[eventName] = (callbacks[eventName] || []).concat(cb);\n\n        return function () {\n            return removeEventListener(eventName, cb);\n        };\n    }\n\n    withUtils(router);\n    withPlugins(router);\n    withMiddleware(router);\n    withObservable(router);\n    withRouteLifecycle(router);\n    withRouterLifecycle(router);\n    withNavigation(router);\n    withCloning(router, createRouter);\n\n    var rootNode = routes instanceof RouteNode ? routes : new RouteNode('', '', routes, onRouteAdded);\n\n    router.rootNode = rootNode;\n\n    return router;\n\n    function onRouteAdded(route) {\n        if (route.canActivate) router.canActivate(route.name, route.canActivate);\n\n        if (route.forwardTo) router.forward(route.name, route.forwardTo);\n\n        if (route.decodeParams) router.config.decoders[route.name] = route.decodeParams;\n\n        if (route.encodeParams) router.config.encoders[route.name] = route.encodeParams;\n\n        if (route.defaultParams) router.config.defaultParams[route.name] = route.defaultParams;\n    }\n\n    /**\n     * Build a state object\n     * @param  {String} name         The state name\n     * @param  {Object} params       The state params\n     * @param  {String} path         The state path\n     * @param  {Object} [meta]       The meta object\n     * @param  {Number} [forceId]    The ID to use in meta (incremented by default)\n     * @return {Object}              The state object\n     */\n    function makeState(name, params, path, meta, forceId) {\n        var state = {};\n        var setProp = function setProp(key, value) {\n            return Object.defineProperty(state, key, { value: value, enumerable: true });\n        };\n        setProp('name', name);\n        setProp('params', params);\n        setProp('path', path);\n\n        if (meta) {\n            var finalStateId = void 0;\n\n            if (forceId === undefined) {\n                stateId += 1;\n                finalStateId = stateId;\n            } else {\n                finalStateId = forceId;\n            }\n\n            setProp('meta', _extends({}, meta, { id: finalStateId }));\n        }\n\n        return state;\n    }\n\n    /**\n     * Build a not found state for a given path\n     * @param  {String} path      The unmatched path\n     * @param  {Object} [options] The navigation options\n     * @return {Object}           The not found state object\n     */\n    function makeNotFoundState(path, options) {\n        return makeState(constants.UNKNOWN_ROUTE, { path: path }, path, { options: options });\n    }\n\n    /**\n     * Get the current router state\n     * @return {Object} The current state\n     */\n    function getState() {\n        return routerState;\n    }\n\n    /**\n     * Set the current router state\n     * @param {Object} state The state object\n     */\n    function setState(state) {\n        routerState = state;\n\n        if (state && state.meta && typeof state.meta.id === 'number') {\n            stateId = state.meta.id;\n        }\n    }\n\n    /**\n     * Get router options\n     * @return {Object} The router options\n     */\n    function getOptions() {\n        return options;\n    }\n\n    /**\n     * Set an option\n     * @param  {String} option The option name\n     * @param  {*}      value  The option value\n     * @return {Object}       The router instance\n     */\n    function setOption(option, value) {\n        options[option] = value;\n        return router;\n    }\n\n    /**\n     * Set a router dependency\n     * @param  {String} dependencyName The dependency name\n     * @param  {*}      dependency     The dependency\n     * @return {Object}                The router instance\n     */\n    function setDependency(dependencyName, dependency) {\n        dependencies[dependencyName] = dependency;\n        return router;\n    }\n\n    /**\n     * Add dependencies\n     * @param { Object} deps A object of dependencies (key-value pairs)\n     * @return {Object}      The router instance\n     */\n    function setDependencies(deps) {\n        Object.keys(deps).forEach(function (depName) {\n            dependencies[depName] = deps[depName];\n        });\n\n        return router;\n    }\n\n    /**\n     * Get dependencies\n     * @return {Object} The dependencies\n     */\n    function getDependencies() {\n        return dependencies;\n    }\n\n    function getInjectables() {\n        return [router, getDependencies()];\n    }\n\n    function executeFactory(factoryFunction) {\n        return factoryFunction.apply(undefined, _toConsumableArray(getInjectables()));\n    }\n\n    /**\n     * Add routes\n     * @param  {Array} routes A list of routes to add\n     * @return {Object}       The router instance\n     */\n    function add(routes) {\n        rootNode.add(routes, onRouteAdded);\n        return router;\n    }\n\n    /**\n     * Add a single route (node)\n     * @param {String} name                   The route name (full name)\n     * @param {String} path                   The route path (from parent)\n     * @param {Function} [canActivateHandler] The canActivate handler for this node\n     */\n    function addNode(name, path, canActivateHandler) {\n        router.rootNode.addNode(name, path);\n        if (canActivateHandler) router.canActivate(name, canActivateHandler);\n        return router;\n    }\n}\n\nexport default createRouter;","export default function withMiddleware(router) {\n    var middlewareFactories = [];\n    var middlewareFunctions = [];\n\n    router.useMiddleware = useMiddleware;\n    router.getMiddlewareFactories = getMiddlewareFactories;\n    router.getMiddlewareFunctions = getMiddlewareFunctions;\n    router.clearMiddleware = clearMiddleware;\n\n    /**\n     * Register middleware functions.\n     * @param  {...Function} middlewares The middleware functions\n     * @return {Object}                  The router instance\n     */\n    function useMiddleware() {\n        for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n            middlewares[_key] = arguments[_key];\n        }\n\n        middlewares.forEach(addMiddleware);\n\n        return router;\n    }\n\n    /**\n     * Remove all middleware functions\n     * @return {Object} The router instance\n     */\n    function clearMiddleware() {\n        middlewareFactories = [];\n        middlewareFunctions = [];\n\n        return router;\n    }\n\n    function getMiddlewareFactories() {\n        return middlewareFactories;\n    }\n\n    function getMiddlewareFunctions() {\n        return middlewareFunctions;\n    }\n\n    function addMiddleware(middleware) {\n        middlewareFactories.push(middleware);\n        middlewareFunctions.push(router.executeFactory(middleware));\n    }\n}","/* istanbul ignore next */\n/*eslint no-console: 0*/\nvar noop = function noop() {};\n\nfunction loggerPlugin() {\n    var startGroup = void 0,\n        endGroup = void 0;\n\n    if (console.groupCollapsed) {\n        startGroup = function startGroup(label) {\n            return console.groupCollapsed(label);\n        };\n        endGroup = function endGroup() {\n            return console.groupEnd();\n        };\n    } else if (console.group) {\n        startGroup = function startGroup(label) {\n            return console.group(label);\n        };\n        endGroup = function endGroup() {\n            return console.groupEnd();\n        };\n    } else {\n        startGroup = noop;\n        endGroup = noop;\n    }\n\n    console.info('Router started');\n\n    return {\n        onStop: function onStop() {\n            console.info('Router stopped');\n        },\n        onTransitionStart: function onTransitionStart(toState, fromState) {\n            endGroup();\n            startGroup('Router transition');\n            console.log('Transition started from state');\n            console.log(fromState);\n            console.log('To state');\n            console.log(toState);\n        },\n        onTransitionCancel: function onTransitionCancel() {\n            console.warn('Transition cancelled');\n        },\n        onTransitionError: function onTransitionError(toState, fromState, err) {\n            console.warn('Transition error with code ' + err.code);\n            endGroup();\n        },\n        onTransitionSuccess: function onTransitionSuccess() {\n            console.log('Transition success');\n            endGroup();\n        }\n    };\n}\n\nloggerPlugin.pluginName = 'LOGGER_PLUGIN';\n\nexport default loggerPlugin;","import createRouter from './create-router';\nimport RouteNode from 'route-node';\nimport loggerPlugin from './plugins/logger';\nimport transitionPath from 'router5-transition-path';\nimport constants, { errorCodes } from './constants';\n\nexport default createRouter;\n\nexport { createRouter, RouteNode, loggerPlugin, errorCodes, transitionPath, constants };","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = withUtils;\nfunction withUtils(router, options) {\n    router.urlToPath = urlToPath;\n    router.buildUrl = buildUrl;\n    router.matchUrl = matchUrl;\n\n    function buildUrl(route, params) {\n        var base = options.base || '';\n        var prefix = options.useHash ? '#' + options.hashPrefix : '';\n        var path = router.buildPath(route, params);\n\n        if (path === null) return null;\n\n        return base + prefix + path;\n    }\n\n    function urlToPath(url) {\n        var match = url.match(/^(?:http|https):\\/\\/(?:[0-9a-z_\\-.:]+?)(?=\\/)(.*)$/);\n        var path = match ? match[1] : url;\n\n        var pathParts = path.match(/^(.+?)(#.+?)?(\\?.+)?$/);\n\n        if (!pathParts) throw new Error('[router5] Could not parse url ' + url);\n\n        var pathname = pathParts[1];\n        var hash = pathParts[2] || '';\n        var search = pathParts[3] || '';\n\n        return (options.useHash ? hash.replace(new RegExp('^#' + options.hashPrefix), '') : options.base ? pathname.replace(new RegExp('^' + options.base), '') : pathname) + search;\n    }\n\n    function matchUrl(url) {\n        return router.matchPath(urlToPath(url));\n    }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Dumb functions\n */\n// istanbul ignore next\nvar identity = function identity(arg) {\n    return function () {\n        return arg;\n    };\n};\n// istanbul ignore next\nvar noop = function noop() {};\n\n/**\n * Browser detection\n */\nvar isBrowser = typeof window !== 'undefined' && window.history;\n\n/**\n * Browser functions needed by router5\n */\nvar getBase = function getBase() {\n    return window.location.pathname;\n};\n\nvar supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n    return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\nvar pushState = function pushState(state, title, path) {\n    return window.history.pushState(state, title, path);\n};\n\nvar replaceState = function replaceState(state, title, path) {\n    return window.history.replaceState(state, title, path);\n};\n\nvar addPopstateListener = function addPopstateListener(fn, opts) {\n    var shouldAddHashChangeListener = opts.useHash && !supportsPopStateOnHashChange();\n\n    window.addEventListener('popstate', fn);\n\n    if (shouldAddHashChangeListener) {\n        window.addEventListener('hashchange', fn);\n    }\n\n    return function () {\n        window.removeEventListener('popstate', fn);\n\n        if (shouldAddHashChangeListener) {\n            window.removeEventListener('hashchange', fn);\n        }\n    };\n};\n\nvar getLocation = function getLocation(opts) {\n    var path = opts.useHash ? window.location.hash.replace(new RegExp('^#' + opts.hashPrefix), '') : window.location.pathname.replace(new RegExp('^' + opts.base), '');\n\n    // Fix Frefox issue with non encoded pipe characters\n    var correctedPath = path.replace(/\\|/g, '%7C');\n\n    return (correctedPath || '/') + window.location.search;\n};\n\nvar getState = function getState() {\n    return window.history.state;\n};\n\nvar getHash = function getHash() {\n    return window.location.hash;\n};\n\n/**\n * Export browser object\n */\nvar browser = {};\nif (isBrowser) {\n    browser = {\n        getBase: getBase,\n        pushState: pushState,\n        replaceState: replaceState,\n        addPopstateListener: addPopstateListener,\n        getLocation: getLocation,\n        getState: getState,\n        getHash: getHash\n    };\n} else {\n    // istanbul ignore next\n    browser = {\n        getBase: identity(''),\n        pushState: noop,\n        replaceState: noop,\n        addPopstateListener: noop,\n        getLocation: identity(''),\n        getState: identity(null),\n        getHash: identity('')\n    };\n}\n\nexports.default = browser;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar errorCodes = exports.errorCodes = {\n    ROUTER_NOT_STARTED: 'NOT_STARTED',\n    NO_START_PATH_OR_STATE: 'NO_START_PATH_OR_STATE',\n    ROUTER_ALREADY_STARTED: 'ALREADY_STARTED',\n    ROUTE_NOT_FOUND: 'ROUTE_NOT_FOUND',\n    SAME_STATES: 'SAME_STATES',\n    CANNOT_DEACTIVATE: 'CANNOT_DEACTIVATE',\n    CANNOT_ACTIVATE: 'CANNOT_ACTIVATE',\n    TRANSITION_ERR: 'TRANSITION_ERR',\n    TRANSITION_CANCELLED: 'CANCELLED'\n};\n\nvar constants = {\n    UNKNOWN_ROUTE: '@@router5/UNKNOWN_ROUTE',\n    ROUTER_START: '$start',\n    ROUTER_STOP: '$stop',\n    TRANSITION_START: '$$start',\n    TRANSITION_CANCEL: '$$cancel',\n    TRANSITION_SUCCESS: '$$success',\n    TRANSITION_ERROR: '$$error'\n};\n\nexports.default = constants;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _constants = require('../../constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _browser = require('./browser');\n\nvar _browser2 = _interopRequireDefault(_browser);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n    forceDeactivate: true,\n    useHash: false,\n    hashPrefix: '',\n    base: false,\n    mergeState: false,\n    preserveHash: true\n};\n\nvar source = 'popstate';\n\nfunction browserPluginFactory() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var browser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _browser2.default;\n\n    var options = _extends({}, defaultOptions, opts);\n    var transitionOptions = {\n        forceDeactivate: options.forceDeactivate,\n        source: source\n    };\n    var removePopStateListener = void 0;\n\n    function browserPlugin(router) {\n        var routerOptions = router.getOptions();\n        var routerStart = router.start;\n\n        (0, _utils2.default)(router, options);\n\n        router.start = function () {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            if (args.length === 0 || typeof args[0] === 'function') {\n                routerStart.apply(undefined, [browser.getLocation(options)].concat(args));\n            } else {\n                routerStart.apply(undefined, args);\n            }\n\n            return router;\n        };\n\n        router.replaceHistoryState = function (name) {\n            var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            var state = router.buildState(name, params);\n            var url = router.buildUrl(name, params);\n            router.lastKnownState = state;\n            browser.replaceState(state, '', url);\n        };\n\n        function updateBrowserState(state, url, replace) {\n            var trimmedState = state ? {\n                meta: state.meta,\n                name: state.name,\n                params: state.params,\n                path: state.path\n            } : state;\n            var finalState = options.mergeState === true ? _extends({}, browser.getState(), trimmedState) : trimmedState;\n\n            if (replace) browser.replaceState(finalState, '', url);else browser.pushState(finalState, '', url);\n        }\n\n        function onPopState() {\n            var evt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            var routerState = router.getState();\n            // Do nothing if no state or if last know state is poped state (it should never happen)\n            var newState = !evt.state || !evt.state.name;\n            var state = newState ? router.matchPath(browser.getLocation(options), source) : router.makeState(evt.state.name, evt.state.params, evt.state.path, _extends({}, evt.state.meta, { source: source }), evt.state.meta.id);\n            var defaultRoute = routerOptions.defaultRoute,\n                defaultParams = routerOptions.defaultParams;\n\n\n            if (!state) {\n                // If current state is already the default route, we will have a double entry\n                // Navigating back and forth will emit SAME_STATES error\n                defaultRoute && router.navigateToDefault(_extends({}, transitionOptions, {\n                    reload: true,\n                    replace: true\n                }));\n                return;\n            }\n            if (routerState && router.areStatesEqual(state, routerState, false)) {\n                return;\n            }\n\n            router.transitionToState(state, routerState, transitionOptions, function (err, toState) {\n                if (err) {\n                    if (err.redirect) {\n                        var _err$redirect = err.redirect,\n                            name = _err$redirect.name,\n                            params = _err$redirect.params;\n\n\n                        router.navigate(name, params, _extends({}, transitionOptions, {\n                            replace: true,\n                            force: true,\n                            redirected: true\n                        }));\n                    } else if (err.code === _constants.errorCodes.CANNOT_DEACTIVATE) {\n                        var url = router.buildUrl(routerState.name, routerState.params);\n                        if (!newState) {\n                            // Keep history state unchanged but use current URL\n                            updateBrowserState(state, url, true);\n                        }\n                        // else do nothing or history will be messed up\n                        // TODO: history.back()?\n                    } else {\n                        // Force navigation to default state\n                        defaultRoute && router.navigate(defaultRoute, defaultParams, _extends({}, transitionOptions, {\n                            reload: true,\n                            replace: true\n                        }));\n                    }\n                } else {\n                    router.invokeEventListeners(_constants2.default.TRANSITION_SUCCESS, toState, routerState, { replace: true });\n                }\n            });\n        }\n\n        function onStart() {\n            if (options.useHash && !options.base) {\n                // Guess base\n                options.base = browser.getBase();\n            }\n\n            removePopStateListener = browser.addPopstateListener(onPopState, options);\n        }\n\n        function onStop() {\n            if (removePopStateListener) {\n                removePopStateListener();\n            }\n        }\n\n        function onTransitionSuccess(toState, fromState, opts) {\n            var historyState = browser.getState();\n            var hasState = historyState && historyState.meta && historyState.name && historyState.params;\n            var statesAreEqual = fromState && router.areStatesEqual(fromState, toState, false);\n            var replace = opts.replace || !hasState || statesAreEqual;\n            var url = router.buildUrl(toState.name, toState.params);\n            if (fromState === null && options.useHash === false && options.preserveHash === true) {\n                url += browser.getHash();\n            }\n            updateBrowserState(toState, url, replace);\n        }\n\n        return { onStart: onStart, onStop: onStop, onTransitionSuccess: onTransitionSuccess, onPopState: onPopState };\n    }\n\n    browserPlugin.pluginName = 'BROWSER_PLUGIN';\n\n    return browserPlugin;\n}\n\nexports.default = browserPluginFactory;","module.exports = function(originalModule) {\r\n\tif (!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import * as Router5 from 'router5'\nimport browserPlugin from 'router5/plugins/browser';\nimport {Route, Router} from \"router5/create-router\";\nimport {PluginFactory} from \"router5/core/plugins\";\n\nvar router: Router = Router5.createRouter([]).usePlugin(browserPlugin({\n    useHash: true\n}));\n\nvar userRoute: Route = {\n    name: \"user\",\n    path: \"/user\"\n};\nrouter.add(userRoute);\n\nvar userDetailsRoute: Route = {\n    name: \"userDetails\",\n    path: \"/user/details\"\n};\nrouter.add(userDetailsRoute);\n\nvar dashboardRoute: Route = {\n    name: \"dashboard\",\n    path: \"/dashboard\"\n};\n\nrouter.add(dashboardRoute);\n\nvar plugin: PluginFactory = function (router, dependencies) {\n    return {\n        pluginName: \"MY_PLUGIN\",\n        onTransitionSuccess: (toState, fromState) => {\n            console.log('Yippee, navigation to ' + toState.name + ' was successful!');\n            console.log(toState);\n            console.log(fromState);\n        },\n        onTransitionError: (toState, fromState, err) => {\n            console.log(toState);\n            console.log(fromState);\n            console.log(err);\n        },\n        onTransitionStart: (toState, fromState) => {\n            console.log('Starting, navigation to ' + toState.name);\n        }\n\n    };\n} as any;\n\nplugin.pluginName = \"MY_PLUGIN\";\n\nrouter.usePlugin(plugin);\n\n\nrouter.start(\"/user\");\n\nconsole.log(\"Routing started\");"],"sourceRoot":""}